buildscript {
	ext {
		springBootVersion = '3.3.13'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "io.spring.gradle:dependency-management-plugin:1.0.15.RELEASE"
	}

	tasks.whenTaskAdded { task -> if(task.name.equals("lint")) {   task.enabled = false } }
}

allprojects {

}

subprojects {
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group = 'com.example'
	version = '0.0.1'
	sourceCompatibility = '17'
	targetCompatibility = '17'
	compileJava.options.encoding = "UTF-8"
	ext.set('springCloudVersion', "2021.0.8")

	repositories {
		mavenCentral()
		maven {
			url "https://artifacts.unidata.ucar.edu/repository/unidata-all/"
		}
		google()
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.junit.jupiter:junit-jupiter-api'
		testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'
		annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
	}
}



project(':Bucket4j-traffic-limit'){
	bootJar.enabled = true
	jar.enabled = false
	bootJar.exclude('application**.properties')
	version = '1.0.0'

	dependencies {

		implementation 'org.springframework.boot:spring-boot-starter-web-services'
		compileOnly 'org.projectlombok:lombok'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

		//bucket4j
		implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:8.0.1'
	}
}

project(':Rabbitmq-http-async:HttpServer'){
	bootJar.enabled = true
	jar.enabled = false
	bootJar.exclude('application**.properties')
	version = '1.0.0'

	dependencies {

		implementation 'org.springframework.boot:spring-boot-starter-web-services'
		compileOnly 'org.projectlombok:lombok'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'

	}
}

project(':Rabbitmq-http-async:RabbitMqClient'){
	bootJar.enabled = true
	jar.enabled = false
	bootJar.exclude('application**.properties')
	version = '1.0.0'

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-webflux'
		// RabbitMQ
		implementation 'org.springframework.boot:spring-boot-starter-amqp'

	}
}

project(':webflux:demo'){
	bootJar.enabled = true
	jar.enabled = false
	bootJar.exclude('application**.properties')
	version = '1.0.0'

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-webflux'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'io.projectreactor:reactor-test'
		implementation 'org.mapstruct:mapstruct:1.5.1.Final'
		annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.1.Final'
		implementation 'io.r2dbc:r2dbc-h2'
		testImplementation 'com.h2database:h2:2.2.224'

		implementation 'com.google.code.gson:gson'
		implementation 'org.apache.commons:commons-lang3:3.12.0'

		//objectMapper로 date/time type 직렬화 할때 필요
		implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.0'

		implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'

	}
}

project(':activemq-performance'){
	bootJar.enabled = true
	jar.enabled = false
	bootJar.exclude('application**.properties')
	version = '1.0.0'

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'


		implementation 'org.springframework.boot:spring-boot-starter-activemq'
		implementation 'org.springframework.boot:spring-boot-starter-web'

	}
}

project(':rabbitmq-performance'){
	bootJar.enabled = true
	jar.enabled = false
	bootJar.exclude('application**.properties')
	version = '1.0.0'

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-amqp'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'org.springframework.amqp:spring-rabbit-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

		//objectMapper로 date/time type 직렬화 할때 필요
		implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.0'

	}
}

project(':webfluxLLM') {
	bootJar.enabled = true
	jar.enabled = false
	bootJar.exclude('application**.properties')
	version = '1.0.0'

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-webflux'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'io.projectreactor:reactor-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	}
}
	project(':kafka:kafka-producer'){
		bootJar.enabled = true
		jar.enabled = false
		bootJar.exclude('application**.properties')
		version = '1.0.0'

		dependencies {
			implementation 'org.springframework.boot:spring-boot-starter-web'
			implementation 'org.springframework.boot:spring-boot-starter'
			implementation 'org.springframework.kafka:spring-kafka:3.3.8'
			testImplementation 'org.springframework.boot:spring-boot-starter-test'
			testImplementation 'org.springframework.kafka:spring-kafka-test:3.3.8'
			testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
		}
}






